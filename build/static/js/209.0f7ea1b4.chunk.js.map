{"version":3,"file":"static/js/209.0f7ea1b4.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.9.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t)).value;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { spring } from '../legacy-popmotion/spring.mjs';\nimport { animateStyle } from './index.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this is a spring animation, pre-generate keyframes and\n     * record duration.\n     *\n     * TODO: When introducing support for values beyond opacity it\n     * might be better to use `animate.sample()`\n     */\n    if (options.type === \"spring\") {\n        const springAnimation = spring(options);\n        let state = { done: false, value: keyframes[0] };\n        const springKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = springAnimation.next(t);\n            springKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = springKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta), sampleAnimation.sample(currentTime), sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { cubicBezierAsString } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: Array.isArray(ease) ? cubicBezierAsString(ease) : ease,\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            typeof options.ease !== \"function\" &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.9.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.9.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","filterPrimaryPointer","eventHandler","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","postRender","scheduleVelocityCheck","getSize","velocityCheck","hasAnimated","owner","subscription","clear","passiveEffect","stop","Promise","resolve","stopAnimation","then","clearAnimation","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","appearStoreId","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","latest","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","createAcceleratedAnimation","valueName","springAnimation","springKeyframes","iterations","direction","animateStyle","onfinish","sampleAnimation","setWithVelocity","timeout","checkElapsed","read","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","onChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_d","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}