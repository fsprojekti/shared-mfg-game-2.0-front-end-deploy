{"version":3,"file":"static/js/650.83df2c37.chunk.js","mappings":"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","sources":["components/misc/TradePanel/BarChart.js","components/misc/TradePanel/ToggleSwitch.js","components/misc/TradeModal.js","components/misc/CancelOrderModal.js","components/misc/TradePanel/Trades.js"],"sourcesContent":["import React from 'react'\r\nimport { ResponsiveBar } from '@nivo/bar';\r\nimport { useGlobalContext } from '../../../context/context';\r\nimport { patternDotsDef, patternSquaresDef, patternLinesDef } from '@nivo/core'\r\nimport { GiConsoleController } from 'react-icons/gi';\r\nimport { Card } from 'react-bootstrap';\r\nconst BarChart = ({dataArray, modifiedData, checked}) => {\r\n    const {orders, user,  transactions, servicesAll, activeChain, openTradeModal, setTradeModalContent, openCancelOrderModal, setCancelOrderModalContent, service,services, agent, agents } = useGlobalContext();\r\n    const setTradeModal = (data) => {\r\n\r\n        const modalService = services.filter(service => service._id  == data.service && service.state == \"MARKET\");\r\n        console.log(data)\r\n\r\n        if (modalService.length == 0 && data.service != service._id && data.serviceType != service.type) {\r\n            setTradeModalContent(data);\r\n            openTradeModal();\r\n        } else if(modalService && data.service != service._id && data.serviceType != service.type){\r\n            setCancelOrderModalContent(data);\r\n            openCancelOrderModal();\r\n        }\r\n    };\r\n\r\n    const mouseHover = (data, event) => {\r\n        if (data.serviceType !== service.type) {\r\n            event.target.style.cursor = 'pointer';\r\n        } else {\r\n            if (data.service === service._id) {\r\n                event.target.style.cursor = 'not-allowed';\r\n            }\r\n            else {\r\n                event.target.style.cursor = 'not-allowed';\r\n            }\r\n        }\r\n    };\r\n\r\n    const renderLabel = (data) => {\r\n        const realData = dataArray.filter(item => item._id === data._id);\r\n        if (!(!Array.isArray(realData) || !realData.length)) {\r\n            if (!checked) {\r\n                return ( realData[0].price.toString() + '');\r\n            } else {\r\n                return (realData[0].serviceDuration);\r\n            }\r\n        }\r\n    };\r\n\r\n    const renderTooltip = (data) => {\r\n        const realData = dataArray.filter(item => item._id === data._id);\r\n        if (!(!Array.isArray(realData) || !realData.length)) {\r\n            return realData[0].price.toString();\r\n        }\r\n    };\r\n\r\n    const millisToMinutesAndSecondsShort = (millis) => {\r\n        let d = new Date(1000*Math.round(millis/1000));\r\n        if (d.getUTCMinutes() === 0) {\r\n            return ( d.getUTCSeconds() + 's' );\r\n        } else {\r\n            return ( d.getUTCMinutes() + ':' + d.getUTCSeconds());\r\n        }\r\n    };\r\n\r\n    function millisToMinutesAndSeconds(millis) {\r\n        let d = new Date(1000*Math.round(millis/1000));\r\n        if (d.getUTCMinutes() === 0) {\r\n            return ( d.getUTCSeconds() + 's' );\r\n        } else {\r\n            return ( d.getUTCMinutes() + 'min ' + d.getUTCSeconds() + 's' );\r\n        }\r\n    }\r\n\r\n    const toggleData = () => {\r\n        if (!checked) {\r\n            return [ 'price' ];\r\n        } else {\r\n            return [ 'serviceDuration' ]\r\n        }\r\n    };\r\n\r\n    const toggleNameAxis = () => {\r\n        if (!checked) {\r\n            return ('PRICE');\r\n        } else {\r\n            return ('TIME FOR SERVICE');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <ResponsiveBar\r\n            data={modifiedData}\r\n            onClick={(data) => setTradeModal(data.data)}\r\n            onMouseEnter={(data, event) => mouseHover(data.data, event)}\r\n            keys={toggleData()}\r\n            indexBy=\"providerName\"\r\n            borderRadius=\"8px\"\r\n            borderWidth=\"1px\"\r\n            margin={{ top: 10, right: 20, bottom: 50, left: 70 }}\r\n            padding={0.25}\r\n            valueScale={{ type: 'symlog'}}\r\n            theme={{ \"fontSize\": 14, fontFamily: \"Roboto, sans-serif\", axis: { legend: { text: { fontSize: \"16px\", fontWeight: \"bold\", fontFamily: \"Roboto, sans-serif\" } } } }}\r\n            colors={d => d.data.color}\r\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n            }}\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: toggleNameAxis(),\r\n                legendPosition: 'middle',\r\n                legendOffset: -50,\r\n                tickValues: 3\r\n            }}\r\n            tooltip={({ data }) => {\r\n                return (\r\n                    <Card style={{opacity: \"0.8\"}}>\r\n                        <b>Price: {renderTooltip(data)}</b>\r\n                        <b>Time for service: {data.serviceDuration} seconds</b>\r\n                    </Card>\r\n\r\n                )\r\n            }}\r\n            label={(data) => renderLabel(data.data)}\r\n            labelSkipWidth={12}\r\n            labelSkipHeight={12}\r\n            labelTextColor=\"white\"\r\n            animate={false}\r\n            motionStiffness={90}\r\n            motionDamping={15}\r\n            defs={[\r\n            // using helpers (cannot be used with http rendering API)\r\n            // will use color from current element\r\n            patternDotsDef('dots', { color: 'black', background: 'inherit', size: \"8\", padding: \"4\", stagger: true }),\r\n            patternLinesDef('lines-pattern', {\r\n            \"spacing\": 10,\r\n            \"rotation\": -55,\r\n            \"lineWidth\": 2,\r\n            \"background\": \"inherit\",\r\n            \"color\": \"#000000\",\r\n            \r\n            }),\r\n            // will use background color from current element\r\n            patternSquaresDef('squares', { background: 'inherit' }),\r\n            // using plain object\r\n            { id: 'custom', type: 'patternSquares', size: 24 },\r\n            ]}\r\n            fill={[\r\n                {\r\n                match: \r\n                    d => d.data.data.service == service._id,\r\n                id: 'lines-pattern'\r\n            },\r\n                // { match: '*', id: 'custom' },\r\n        ]}\r\n        />\r\n    )\r\n};\r\n\r\n\r\nexport default BarChart","import React from 'react';\r\nimport Switch from \"react-switch\";\r\n\r\n\r\nconst SwitchToggle = (data) => {\r\n\r\n    const handleChange = nextChecked => {\r\n        data.onChange(nextChecked);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex\" style={{padding: \"5px\"}}>\r\n            <div style={{margin: \"auto 10px auto 10px\"}}>Price</div>\r\n            <Switch\r\n                onChange={handleChange}\r\n                checked={data.checked}\r\n                onColor=\"#86d3ff\"\r\n                onHandleColor=\"#2693e6\"\r\n                handleDiameter={30}\r\n                uncheckedIcon={false}\r\n                checkedIcon={false}\r\n                boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\r\n                activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\r\n                height={20}\r\n                width={48}\r\n                className=\"react-switch\"\r\n            />\r\n            <div className=\"toggle-switch-text\">Time</div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default SwitchToggle","import React, {useState, useEffect} from 'react';\r\nimport { useGlobalContext } from '../../context/context';\r\nimport {InputGroup, FormControl, Button, Spinner} from \"react-bootstrap\";\r\nimport {motion} from 'framer-motion'\r\n\r\nconst TradeModal = () => {\r\n    const { transactions, user, isTradeModalOpen, usersBalances, closeTradeModal, servicesAll, activeChain, tradeModalContent, setIsTradeModalOpen, apiUserBidOrder, users, orders, chains, cookies, agents, note, setNote} = useGlobalContext();\r\n    const [txFee, setTxFee] = useState(\"0\");\r\n    const [tableDataArray, setTableDataArray] = useState([]);\r\n    const [provider, setProvider] = useState('');\r\n\r\n    const countDecimals = (value) => {\r\n        if(Math.floor(value).toString() === value) return 0;\r\n        return value.toString().split(\".\")[1].length || 0;\r\n    };\r\n\r\n    const getColor = (service) => {\r\n        switch(service) {\r\n            case \"MECHANICAL\":\r\n                return \"#db6d28\";\r\n            case \"ELECTRICAL\": \r\n                return \"#388bfd\";\r\n            case \"PROGRAMMING\": \r\n                return \"#a371f7\";\r\n            default:\r\n                return \"rgb(0, 0, 0)\";\r\n        }\r\n    };\r\n\r\n    const confirm = async () => {\r\n        try {\r\n            if (txFee === undefined || txFee === \"\") {\r\n                setNote((prevState) => {\r\n                    return({\r\n                      ...prevState,\r\n                      msg: 'You must enter a value',\r\n                      show: true,\r\n                      heading: 'Error',\r\n                      type: 'danger'\r\n                    });\r\n                  });\r\n            } else {\r\n                if (isNaN(txFee) || txFee < 0) {\r\n                    setNote((prevState) => {\r\n                        return({\r\n                          ...prevState,\r\n                          msg: 'Input value must be an integer',\r\n                          show: true,\r\n                          heading: 'Error',\r\n                          type: 'danger'\r\n                        });\r\n                      });\r\n                } else {\r\n                    if (countDecimals(txFee) > 0) {\r\n                        setNote((prevState) => {\r\n                            return({\r\n                              ...prevState,\r\n                              msg: 'Input value must be an integer',\r\n                              heading: 'Error',\r\n                              show: true,\r\n                              type: 'danger'\r\n                            });\r\n                          });\r\n                    } else {\r\n                        if (parseInt((tradeModalContent.price) + parseInt(txFee)) > parseInt(usersBalances[`${chains[activeChain].name}`])) {\r\n                            setNote((prevState) => {\r\n                                return({\r\n                                  ...prevState,\r\n                                  msg: 'Price and TxFee is higher than balance',\r\n                                  heading: 'Error',\r\n                                  show: true,\r\n                                  type: 'danger'\r\n                                });\r\n                              });\r\n                        } else {\r\n                            console.log(tradeModalContent);\r\n                            await apiUserBidOrder(txFee, tradeModalContent._id);\r\n                            setIsTradeModalOpen(false);\r\n\r\n                            setNote({...(note.show = false)});\r\n                            setTxFee();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } catch(err) {\r\n            if (err.response !== undefined && err.response.data.message === \"Trade already exists\") {\r\n                // setAlertContent('Trade with this person already exists');\r\n                // setShowAlert(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log(servicesAll);\r\n        console.log(transactions);\r\n\r\n        const renderTableData = async () => {\r\n            const orderTransactions = await transactions.filter(transaction => transaction.chain == chains[activeChain].id && transaction.to == tradeModalContent.agentAccount  && transaction.state == \"SEND\");\r\n            const transactionsInOrder = await orderTransactions.sort((a, b) => b.fee - a.fee);\r\n\r\n            const transactionsArray = await Promise.all(transactionsInOrder.map(async (item) => {\r\n                let { from, fee, amount} = item;\r\n                const consumerAgent = await agents.filter(agent => agent.account === from);\r\n                \r\n                const consumerUser = await users[\"users\"].filter(user => user.id === consumerAgent[0].user);\r\n                console.log(consumerUser);\r\n                \r\n                return (\r\n                    {\r\n                        id: item._id,\r\n                        consumer: consumerUser[0].name,\r\n                        provider: tradeModalContent.providerName,\r\n                        price: amount,\r\n                        fee: fee,\r\n                    }\r\n                )\r\n            }));\r\n            console.log(transactionsArray);\r\n            setTableDataArray(transactionsArray);\r\n        };\r\n        renderTableData();\r\n    }, [transactions, tradeModalContent]);\r\n\r\n    const handleKeypress = async e => {\r\n        try {\r\n            if (e.key === 'Enter') {\r\n                confirm();\r\n            }\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            {isTradeModalOpen ? (\r\n\r\n                \r\n\r\n                <div\r\n            className={`${'modal-confirm-overlay show-modal-confirm'}`} >\r\n            <motion.div \r\n              className=\"box\"\r\n                initial={{ opacity: 0, scale: 0.5 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                transition={{\r\n                    duration: 0.2,\r\n                    type: \"spring\",\r\n                    bounce: 0.5,\r\n                    ease: [0, 0.71, 0.2, 1.01]\r\n                }}\r\n            >\r\n            <div className='modal-confirm-container'>\r\n                <h3>Bid for <span style={{color: \"orange\"}}> {`${tradeModalContent.providerName}'s`}</span>  service</h3>\r\n                <div className='modal-confirm-container-data'>\r\n                    <div className='modal-confirm-container-input'>\r\n                        <ul>\r\n                            <li style={{textAlign: \"center\"}}> <span style={{color: getColor(tradeModalContent.serviceType)}}> {tradeModalContent.serviceType} </span>  </li>\r\n                            {/* <li> Provider: <span style={{color: 'blue'}}> {tradeModalContent.playerName} </span> </li>     */}\r\n                            <li> Price: <span style={{color: 'green'}}> {tradeModalContent.price} </span> </li>\r\n                            \r\n                        </ul>\r\n                        <div className={\"trade-modal-input-group\"}>\r\n                            <label htmlFor={\"txFee\"}>Tx Fee</label>\r\n                            <div className=\"trade-modal-input-group-container\">\r\n                                {/* <input type={\"text\"} name={\"txFee\"} id={\"inputHolder\"} placeholder={\"Enter tx fee\"} onChange={e => changeFeeInput(e)} /> */}\r\n                                <InputGroup >\r\n                                        {/* <InputGroup.Text id=\"d-flex\">Amount</InputGroup.Text> */}\r\n                                    <FormControl value ={txFee} placeholder={\"Enter tx fee\"} onChange={e => setTxFee(e.target.value)}  onKeyPress={e => handleKeypress(e)}></FormControl>\r\n                                </InputGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"trade-modal-table-container\">\r\n                        <table className=\"modal-table-pending-transactions\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th className=\"table-pending-transactions-head\">No.</th>\r\n                                <th className=\"table-pending-transactions-head\">Pending transactions</th>\r\n                                <th className=\"table-pending-transactions-head\">Tx Fee</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                tableDataArray.map((item, index) => (\r\n                                    <tr\r\n                                        key={item.id}\r\n                                        data-tip data-for={item.id}\r\n                                    >\r\n                                        <td><strong>{index + 1}</strong></td>\r\n                                        <td>\r\n                                            {item.consumer} &#8646; {item.provider}\r\n                                        </td>\r\n                                        <td>{item.fee}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"d-flex align-items-center justify-content-center\" style={{zIndex: 2, position: \"absolute\"}}>\r\n                                    <NoteDismissible show={note.show}\r\n                                        msg={note.msg}\r\n                                        variant={note.type}\r\n                                        heading={note.heading}\r\n                                        reportHide={() => {\r\n                                            setNote({...(note.show = false)});\r\n                                        }}/>\r\n                                </div> */}\r\n\r\n                <div className='d-flex'>\r\n                    <Button class=\"btn btn-success active\" style={{backgroundColor: \"green\", margin: \"1rem\"}} className='confirm-modal-btn' onClick={confirm}>Confirm</Button>\r\n                    <Button class=\"btn btn-danger\" style={{backgroundColor: \"red\", margin: \"1rem\"}} onClick={() => {\r\n                        setIsTradeModalOpen(false)\r\n                        setNote({...(note.show = false)});\r\n                        setTxFee();\r\n                    }}>\r\n                    Cancel\r\n                    </Button>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n            </motion.div>\r\n        </div>\r\n\r\n            ): (\r\n                <div></div>\r\n            )}\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default TradeModal","import React, {useEffect, useContext} from 'react';\r\nimport { AppContext } from '../../context/context';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport {motion} from 'framer-motion'\r\n\r\nconst CancelOrderModal = () => {\r\n    const context = useContext(AppContext);\r\n\r\n    const confirm = async () => {\r\n        try {\r\n            console.log(context.cancelOrderModalContent.id);\r\n            await context.apiUserCancelOrder(context.cancelOrderModalContent.id);\r\n            context.closeCancelOrderModal();\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleKeypress = (e) => {\r\n        try {\r\n            if (e.key === 'Enter') {\r\n                confirm();\r\n            }\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", e => handleKeypress(e));\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", e => handleKeypress(e));\r\n        };\r\n    }, [context.cancelOrderModalContent]);\r\n\r\n    return (\r\n\r\n        <div>\r\n            {context.isCancelOrderModalOpen ? (\r\n\r\n\r\n\r\n\r\n\r\n            <div>CANCEL ORDER MODAL\r\n\r\n                <div className={`${'modal-confirm-overlay show-modal-confirm'}`} >\r\n                <motion.div \r\n                className=\"box\"\r\n                    initial={{ opacity: 0, scale: 0.5 }}\r\n                    animate={{ opacity: 1, scale: 1 }}\r\n                    transition={{\r\n                        duration: 0.2,\r\n                        type: \"spring\",\r\n                        bounce: 0.5,\r\n                        ease: [0, 0.71, 0.2, 1.01]\r\n                    }}\r\n                >\r\n                            <div className='modal-confirm-container'>\r\n                                <h3>Are you sure you want to cancel offer:</h3>\r\n                                <ul>\r\n                                    <li>Player: {context.cancelOrderModalContent.playerName}</li>\r\n                                    <li>typeOfService: {context.cancelOrderModalContent.typeOfService}</li>\r\n                                    <li>price: {context.cancelOrderModalContent.price}</li>\r\n                                </ul>\r\n                                <button className='close-modal-btn' onClick={context.closeCancelOrderModal}>\r\n                                    <FaTimes></FaTimes>\r\n                                </button>\r\n                                <button className='confirm-modal-btn' onClick={confirm}>Confirm</button>\r\n                            </div>\r\n                    </motion.div>\r\n                </div>\r\n            </div>\r\n            ): (\r\n                <div></div>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default CancelOrderModal","import React, {useState, useEffect} from 'react'\r\nimport { useGlobalContext } from '../../../context/context';\r\nimport BarChart from './BarChart';\r\nimport ToggleSwitch from './ToggleSwitch';\r\nimport TradeModal from '../TradeModal';\r\nimport CancelOrderModal from '../CancelOrderModal';\r\n\r\nconst Trades = () => {\r\n    const { game, users, orders, agents, servicesAll, service, chains, activeChain } = useGlobalContext();\r\n    const [dataArray1, setDataArray1] = useState([]);\r\n    const [dataArray2, setDataArray2] = useState([]);\r\n    const [dataArray3, setDataArray3] = useState([]);\r\n    const [modifiedDataArray1, setModifiedDataArray1] = useState([]);\r\n    const [modifiedDataArray2, setModifiedDataArray2] = useState([]);\r\n    const [modifiedDataArray3, setModifiedDataArray3] = useState([]);\r\n    const [otherServices, setOtherServices] = useState([\"Service1\",\"Service2\"]);\r\n\r\n    const [checked1, setChecked1] = useState(false);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n    let backColor= \"#ffffff\";\r\n\r\n\r\n    const handleChange1 = nextChecked => {\r\n        setChecked1(nextChecked);\r\n    };\r\n\r\n    const handleChange2 = nextChecked => {\r\n        setChecked2(nextChecked);\r\n    };\r\n\r\n    const handleChange3 = nextChecked => {\r\n        setChecked3(nextChecked);\r\n    };\r\n\r\n    const millisToFloat = (millis) => {\r\n        const time = millis/60000;\r\n        return time.toFixed(2);\r\n    };\r\n\r\n    const getColor = (service) => {\r\n        switch(service) {\r\n            case \"MECHANICAL\":\r\n                return \"#db6d28\";\r\n            case \"ELECTRICAL\": \r\n                return \"#388bfd\";\r\n            case \"PROGRAMMING\": \r\n                return \"#a371f7\";\r\n            default:\r\n                return \"rgb(0, 0, 0)\";\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const sortDataArrays = async () => { //TODO: Popravi, da se bo gledalo orderje specifičnega chaina\r\n           \r\n            const placedOrders = orders.filter(order => order.chain === chains[activeChain].id  && order.state === \"PLACED\");   \r\n            \r\n            const placedOrdersWithPlayerData = await placedOrders.map(function(ordr){ \r\n                let service=servicesAll.filter(srvc=> srvc._id == ordr.service);\r\n\r\n                ordr.serviceType=service[0].type;\r\n                ordr.serviceDuration=service[0].duration;\r\n\r\n                const providerAgentObject = agents.filter(agent => agent._id === service[0].agent);\r\n                const providerClient = users[\"users\"].filter(user => user.id === providerAgentObject[0].user);\r\n                console.log(providerAgentObject[0])\r\n                ordr.providerName = providerClient[0].name;\r\n                ordr.agentId = providerAgentObject[0]._id;\r\n                ordr.agentAccount = providerAgentObject[0].account;\r\n                ordr.providerId = providerClient[0].id;\r\n\r\n                return ordr\r\n            })   \r\n                \r\n\r\n            let uniqueService = [...new Set(servicesAll.map(item => item.type))];\r\n            uniqueService = uniqueService.filter(item => item !== service.type);\r\n            setOtherServices(uniqueService)\r\n\r\n            \r\n            let array1 = await placedOrdersWithPlayerData.filter(item => item.serviceType === uniqueService[0]);\r\n            let array2 = await placedOrdersWithPlayerData.filter(item => item.serviceType === uniqueService[1]);\r\n            let array3 = await placedOrdersWithPlayerData.filter(item => item.serviceType === service.type);\r\n\r\n            if (checked1) {\r\n                await array1.forEach((item) => {\r\n                    item.price = parseInt(item.price);\r\n                    item.color = getColor(item.serviceType);\r\n                });\r\n                await array1.sort((a, b) => a.serviceDuration - b.serviceDuration);\r\n                await array1.forEach((item) => {\r\n                    item.height = millisToFloat(item.serviceDuration);\r\n                });\r\n                setDataArray1(array1);\r\n\r\n            } else {\r\n                await array1.forEach((item) => {\r\n                    item.price = parseInt(item.price);\r\n                    item.color = getColor(item.serviceType);\r\n                });\r\n                await array1.sort((a, b) => a.price - b.price);\r\n                setDataArray1(array1);\r\n            }\r\n            if (checked2) {\r\n                await array2.forEach((item) => {\r\n                    item.price = parseInt(item.price);\r\n                    item.color = getColor(item.serviceType);\r\n                });\r\n                await array2.sort((a, b) => a.serviceDuration - b.serviceDuration);\r\n                await array2.forEach((item) => {\r\n                    item.height = millisToFloat(item.serviceDuration);\r\n                });\r\n                setDataArray2(array2);\r\n\r\n            } else {\r\n                await array2.forEach((item) => {\r\n                    item.price = parseInt(item.price);\r\n                    item.color = getColor(item.serviceType);\r\n                });\r\n                await array2.sort((a, b) => a.price - b.price);\r\n                setDataArray2(array2);\r\n                \r\n            }\r\n\r\n            if (checked3) {\r\n                await array3.forEach((item) => {\r\n                    item.price = parseInt(item.price);\r\n                    item.color = getColor(item.serviceType);\r\n                });\r\n                await array3.sort((a, b) => a.serviceDuration - b.serviceDuration);\r\n                await array3.forEach((item) => {\r\n                    item.height = millisToFloat(item.serviceDuration);\r\n                });\r\n                setDataArray3(array3);\r\n            } else {\r\n                await array3.forEach((item) => {\r\n                    item.price = parseInt(item.price);\r\n                    item.color = getColor(item.serviceType);\r\n                });\r\n                await array3.sort((a, b) => a.price - b.price);\r\n                setDataArray3(array3);\r\n            }\r\n            //Kaj naredi to: ???\r\n            let modifiedArray1 = await array1.map((item) => {\r\n               if (item.price < 1) {\r\n                   return {...item, price: 0.9};\r\n               } else {\r\n                   return {...item};\r\n               }\r\n            });\r\n            let modifiedArray2 = await array2.map((item) => {\r\n                if (item.price < 1) {\r\n                    return {...item, price: 0.9};\r\n                } else {\r\n                    return {...item};\r\n                }\r\n            });\r\n            let modifiedArray3 = await array3.map((item) => {\r\n                if (item.price < 1) {\r\n                    return {...item, price: 0.9};\r\n                } else {\r\n                    return {...item};\r\n                }\r\n            });\r\n            setModifiedDataArray1(modifiedArray1);\r\n            setModifiedDataArray2(modifiedArray2);\r\n            setModifiedDataArray3(modifiedArray3);\r\n            console.log(modifiedArray3)\r\n            console.log(modifiedArray2)\r\n            console.log(modifiedArray1)\r\n            console.log(service)\r\n\r\n        };\r\n        sortDataArrays(); \r\n\r\n    }, [game, checked1, checked2, checked3]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex flex-row flex-wrap\" style={{zIndex: 2}}>\r\n\r\n                <div style={{width: \"35vw\", maxWidth: \"100%\", boxShadow: \"var(--light-shadow)\", borderRadius: \"8px\", margin: \"5px\", background: backColor }}>\r\n                    <div style={{ textAlign: \"center\", paddingTop: \"7px\"}}>\r\n                        <h3>{otherServices[0]}</h3>\r\n                    </div>\r\n                    <ToggleSwitch checked={checked1} onChange={handleChange1}/>\r\n                    <div style={{ height: \"300px\", width: \"auto\", margin: \"auto\"}}>\r\n                        <BarChart dataArray={dataArray1} modifiedData={modifiedDataArray1} checked={checked1}/>\r\n                    </div>\r\n                </div>\r\n                <div style={{width: \"35vw\",boxShadow: \"var(--light-shadow)\", borderRadius: \"8px\", margin: \"5px\", background: backColor}}>\r\n                    <div style={{ textAlign: \"center\", paddingTop: \"7px\"}}>\r\n                        <h3>{`${otherServices[1]}`}</h3>\r\n                    </div>\r\n                    <ToggleSwitch checked={checked2} onChange={handleChange2}/>\r\n                    <div style={{ height: \"300px\", width: \"auto\", margin: \"auto\"}}>\r\n                        <BarChart dataArray={dataArray2} modifiedData={modifiedDataArray2} checked={checked2}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div >\r\n                    <div style={{width: \"35vw\",boxShadow: \"var(--light-shadow)\", borderRadius: \"8px\", margin: \"5px\", background: backColor}}>\r\n                        <div style={{ textAlign: \"center\", paddingTop: \"7px\"}}>\r\n                            <h3>{`${service.type}`}</h3>\r\n                        </div>\r\n                        <ToggleSwitch checked={checked3} onChange={handleChange3}/>\r\n                        <div style={{ height: \"300px\", width: \"auto\", margin: \"auto\"}}>\r\n                            <BarChart dataArray={dataArray3} modifiedData={modifiedDataArray3} checked={checked3}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <TradeModal/>\r\n                <CancelOrderModal/>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Trades;"],"names":["dataArray","modifiedData","checked","useGlobalContext","openTradeModal","orders","user","transactions","servicesAll","activeChain","setTradeModalContent","openCancelOrderModal","setCancelOrderModalContent","service","services","renderTooltip","agent","agents","data","realData","filter","item","_id","Array","isArray","length","price","toString","onClick","modalService","state","console","log","serviceType","type","setTradeModal","onMouseEnter","event","target","style","cursor","mouseHover","keys","indexBy","borderRadius","borderWidth","margin","top","right","bottom","left","padding","valueScale","theme","fontFamily","axis","legend","text","fontSize","fontWeight","colors","d","color","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","axisLeft","legendPosition","legendOffset","tickValues","tooltip","Card","opacity","serviceDuration","label","renderLabel","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","defs","patternDotsDef","background","size","stagger","patternLinesDef","patternSquaresDef","id","fill","match","className","onChange","nextChecked","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","isTradeModalOpen","usersBalances","closeTradeModal","tradeModalContent","setIsTradeModalOpen","apiUserBidOrder","users","chains","cookies","note","setNote","useState","txFee","setTxFee","tableDataArray","setTableDataArray","confirm","undefined","prevState","msg","show","heading","isNaN","value","Math","floor","split","parseInt","name","response","message","useEffect","renderTableData","transaction","chain","to","agentAccount","orderTransactions","sort","a","b","fee","transactionsInOrder","Promise","all","map","amount","account","consumerAgent","consumerUser","consumer","provider","providerName","transactionsArray","handleKeypress","e","key","err","motion","initial","scale","transition","duration","bounce","ease","textAlign","getColor","htmlFor","InputGroup","FormControl","placeholder","onKeyPress","index","Button","class","backgroundColor","context","useContext","AppContext","cancelOrderModalContent","apiUserCancelOrder","closeCancelOrderModal","document","addEventListener","removeEventListener","isCancelOrderModalOpen","playerName","typeOfService","game","dataArray1","setDataArray1","dataArray2","setDataArray2","dataArray3","setDataArray3","modifiedDataArray1","setModifiedDataArray1","modifiedDataArray2","setModifiedDataArray2","modifiedDataArray3","setModifiedDataArray3","otherServices","setOtherServices","checked1","setChecked1","checked2","setChecked2","checked3","setChecked3","backColor","millisToFloat","millis","toFixed","sortDataArrays","placedOrders","order","ordr","srvc","providerAgentObject","providerClient","agentId","providerId","placedOrdersWithPlayerData","uniqueService","Set","array1","array2","array3","forEach","modifiedArray1","modifiedArray2","modifiedArray3","zIndex","maxWidth","paddingTop","ToggleSwitch"],"sourceRoot":""}