{"version":3,"file":"static/js/618.4fb54ad3.chunk.js","mappings":"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","sources":["components/misc/HomePanel/ServiceBar.js","components/misc/HomePanel/ServiceLoading.js","components/misc/HomePanel/Stats.js"],"sourcesContent":["import {useContext, useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { AppContext } from \"../../../context/context\";\r\n\r\nconst ServiceBar = () => {\r\n    const context = useContext(AppContext);\r\n    const [serviceCompleted, setServiceCompleted] = useState(0);\r\n    const [timeLeft, setTimeLeft] = useState(0);\r\n\r\n    function useInterval(callback, delay) {\r\n        const savedCallback = useRef();\r\n\r\n        useEffect(() => {\r\n            savedCallback.current = callback;\r\n        }, [callback]);\r\n\r\n        useEffect(() => {\r\n            function tick() {\r\n                savedCallback.current();\r\n            }\r\n            if (delay !== null) {\r\n                let id = setInterval(tick, delay);\r\n                return () => clearInterval(id);\r\n            }\r\n        }, [delay]);\r\n    }\r\n\r\n    function millisToMinutesAndSeconds(millis) {\r\n        // console.log(context.service.duration)\r\n        let d = new Date(1000*Math.round(millis/1000));\r\n        if (d.getUTCMinutes() === 0) {\r\n            return ( d.getUTCSeconds() + 's' );\r\n        } else {\r\n            return ( d.getUTCMinutes() + 'min ' + d.getUTCSeconds() + 's' );\r\n        }\r\n    }\r\n\r\n    useInterval(async () => {\r\n        if (context.service.state === \"ACTIVE\" ) {\r\n            let timestamp = (new Date(context.service.updatedAt).getTime())\r\n            // console.log(timestamp)\r\n            let newServiceCompleted = Math.floor(((Date.now() - timestamp) / (context.service.duration*1000)) * 100);\r\n            if (newServiceCompleted > 100) newServiceCompleted = 100;\r\n\r\n            setServiceCompleted(newServiceCompleted);\r\n            let timeLeft = (context.service.duration*1000) - (Date.now() - timestamp);\r\n            if (timeLeft < 0) timeLeft = 0;\r\n            console.log(millisToMinutesAndSeconds(timeLeft))\r\n            setTimeLeft(millisToMinutesAndSeconds(timeLeft));\r\n        } else {\r\n            setServiceCompleted(100);\r\n        }\r\n    }, 50);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"time-container\">\r\n                <div className=\"bar-container\">\r\n                    <div className=\"bar-filler\" style={{width: `${serviceCompleted}%`}}>\r\n                        <span className=\"bar-label\">{`${serviceCompleted}%`}</span>\r\n                    </div>\r\n                    <div className=\"bottom\">\r\n                        {\r\n                            (context.service.state !== \"ACTIVE\") ? (\r\n                                <p>Time for service = {(context.service.duration)} s</p>\r\n                            ) : (\r\n                                <p>Time left = {timeLeft}</p>\r\n                            )\r\n                        }\r\n                        <i></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ServiceBar","import React, {useState, useEffect, useRef} from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { useGlobalContext } from '../../../context/context';\r\n\r\nconst ServiceLoading = (data) => {\r\n    const { id, consumer, provider, type, updatedAt, duration } = data.item;\r\n\r\n    const { gameData } = useGlobalContext();\r\n    const [serviceCompleted, setServiceCompleted] = useState(0);\r\n    const [timeLeft, setTimeLeft] = useState(0);\r\n\r\n\r\n    function useInterval(callback, delay) {\r\n        const savedCallback = useRef();\r\n\r\n        useEffect(() => {\r\n            savedCallback.current = callback;\r\n        }, [callback]);\r\n\r\n        useEffect(() => {\r\n            function tick() {\r\n                savedCallback.current();\r\n            }\r\n            if (delay !== null) {\r\n                let id = setInterval(tick, delay);\r\n                return () => clearInterval(id);\r\n            }\r\n        }, [delay]);\r\n    }\r\n\r\n    function millisToMinutesAndSeconds(millis) {\r\n        let d = new Date(1000*Math.round(millis/1000));\r\n        if (d.getUTCMinutes() === 0) {\r\n            return ( d.getUTCSeconds() + 's' );\r\n        } else {\r\n            return ( d.getUTCMinutes() + 'min ' + d.getUTCSeconds() + 's' );\r\n        }\r\n    }\r\n\r\n    useInterval(async () => {\r\n        let timestamp = (new Date(updatedAt).getTime())\r\n        // // let newServiceCompleted = Math.floor(((Date.now() - gameData.player.serviceTimestamp) / gameData.player.timeForService) * 100);\r\n        // let newServiceCompleted = Math.floor(((Date.now() - timestamp) / (duration*1000)) * 100);\r\n        // setServiceCompleted(newServiceCompleted);\r\n\r\n        const calculateTimeLeft = async () => {\r\n            // let timeLeft = timeForService - (Date.now() - serviceTimestamp);\r\n            let timeLeft = (duration*1000) - (Date.now() - timestamp);\r\n\r\n            let relativeTime = await Math.floor(((Date.now() - timestamp) / (duration*1000)) * 100);\r\n\r\n            if (relativeTime < 0 || timeLeft < 0) {\r\n                relativeTime = 100;\r\n                timeLeft = 0;\r\n            }\r\n            setTimeLeft(millisToMinutesAndSeconds(timeLeft));\r\n            setServiceCompleted(relativeTime);\r\n        };\r\n        calculateTimeLeft();\r\n    }, 50);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"service-container\" data-tip data-for={id}>\r\n                <p>{type}</p>\r\n                <div id=\"divSpinner\" className=\"spinner-loading\">\r\n                    <div className=\"loading-text\">{serviceCompleted}%</div>\r\n                </div>\r\n                {/*<span className=\"service-tooltip\">\r\n                    <ul>\r\n                        <li>Consumer: {consumer}</li>\r\n                        <li>Provider: {provider}</li>\r\n                        <li>Time left: {timeLeft}</li>\r\n                    </ul>\r\n                </span>*/}\r\n                <ReactTooltip  id={id} place=\"right\" type=\"dark\" effect=\"solid\">\r\n                    <ul>\r\n                        <li>Consumer: {consumer}</li>\r\n                        <li>Provider: {provider}</li>\r\n                        <li>Time left: {timeLeft}</li>\r\n                    </ul>\r\n                </ReactTooltip>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ServiceLoading","import React, {useState, useEffect} from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\nimport balanceImg from '../../../assets/balance.png';\r\nimport stakeImg from '../../../assets/stake.png';\r\nimport ServiceBar from './ServiceBar';\r\nimport ServiceLoading from './ServiceLoading';\r\nimport { useGlobalContext } from '../../../context/context';\r\n\r\n\r\nconst Stats = () => {\r\n    const { game, user, users, chains, cookies, activeChain, transactions, servicesAll, usersBalances, usersStakes, orders, services, agent, agents, service} = useGlobalContext();\r\n    const [relativeStake, setRelativeStake] = useState(0);\r\n    const [serviceDataArray, setServiceDataArray] = useState([]);\r\n    const [otherServices, setOtherServices] = useState([\"Service1\",\"Service2\"]);\r\n    const [numOfService1, setNumOfService1] = useState({num: 0});\r\n    const [numOfService2, setNumOfService2] = useState({num: 0});\r\n    const [userService, setUserService] = useState([]);\r\n    let backColor= \"#ffffff\";\r\n\r\n\r\n    const getColor = (service) => {\r\n        switch(service) {\r\n            case \"MECHANICAL\":\r\n                return \"#f8e3a1\";\r\n            case \"ELECTRICAL\": \r\n                return \"rgb(255, 255, 132, 0.5)\";\r\n            case \"PROGRAMMING\": \r\n                return \"rgb(0, 99, 132, 0.5)\";\r\n            default:\r\n                return \"rgb(255, 255, 255)\";\r\n        }\r\n    };\r\n\r\n\r\n    //TODO: To popravi/odstrani:\r\n    function millisToMinutesAndSeconds(millis) {\r\n        let d = new Date(1000*Math.round(millis/1000));\r\n        if (d.getUTCMinutes() === 0) {\r\n            return ( d.getUTCSeconds() + 's' );\r\n        } else {\r\n            return ( d.getUTCMinutes() + 'min ' + d.getUTCSeconds() + 's' );\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n \r\n        if(chains.includes(\"id\")) {\r\n            if (chains[cookies.activeChain].stake == 0 ||  chains[cookies.activeChain].stake == undefined) {\r\n                setRelativeStake({stake: 0});\r\n            } else {\r\n                let stake = ((usersStakes[chains[cookies.activeChain].name] / chains[cookies.activeChain].stake) * 100).toFixed(1)\r\n                setRelativeStake({stake: stake});\r\n            } \r\n        } else {\r\n            setRelativeStake(0);\r\n        }\r\n\r\n        \r\n        const renderServiceData = async () => {\r\n            // console.log(services);\r\n            // // console.log(agent);\r\n            const activeServices = await services.filter(service => service.state === \"ACTIVE\");\r\n            console.log(activeServices);\r\n            \r\n            \r\n            const userServices = await Promise.all(activeServices.map(async (item) => {\r\n\r\n                const providerAgentObject = await agents.filter(agent => agent._id === item.agent);\r\n                console.log(providerAgentObject)\r\n                const providerUser = await users[\"users\"].filter(user => user._id === providerAgentObject[0].user); \r\n                   \r\n                      \r\n                return ( \r\n                    {\r\n                        id: item._id,\r\n                        consumer: user.name,\r\n                        provider: providerUser[0].name,\r\n                        type: item.type,\r\n                        duration: item.duration,\r\n                        updatedAt: item.updatedAt,\r\n                        state: item.state,\r\n\r\n                    }\r\n                )\r\n            }));\r\n            console.log(activeServices)\r\n            setServiceDataArray(userServices);\r\n        };\r\n        renderServiceData();\r\n\r\n        const renderService = async () => {\r\n            //TODO: Services popravi, da jih pravilno vleče vn\r\n            const service = await services.filter(service => service.agent === agent.id);\r\n            console.log(\"Users service is: \" + JSON.stringify(service));\r\n            setUserService(service[0]);\r\n        };\r\n        renderService();\r\n\r\n        const getOtherServiceTypes = async () => {\r\n            let uniqueService = [...new Set(servicesAll.map(item => item.type))];\r\n            uniqueService = uniqueService.filter(item => item !== service.type);\r\n            setOtherServices({service1: uniqueService[0], service2: uniqueService[1]});\r\n            const filledOrders = await services.filter(service => service.state === \"DONE\");\r\n\r\n\r\n            let numOfFirst = filledOrders.filter(order => order.type === uniqueService[0]);\r\n            let numOfSecond = filledOrders.filter(order => order.type === uniqueService[1]);\r\n\r\n            setNumOfService1({num: numOfFirst.length});\r\n            setNumOfService2({num: numOfSecond.length});\r\n\r\n        };\r\n        getOtherServiceTypes();\r\n        \r\n\r\n\r\n    }, [services, user, servicesAll]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex\" style={{padding: \"5px\", columnGap: \"20px\", rowGap: \"20px\", }} >\r\n            \r\n                <div className=\"w-25 p-3\" style={{boxShadow: \"var(--light-shadow)\", borderRadius: \"8px\", fontSize: \"30px\", padding: \"10px\", backgroundColor: backColor}}>\r\n                    <div className={\"stats-image\"}>\r\n                        <img src={balanceImg} alt={\"balance\"}/>\r\n                    </div>\r\n                    <div className={\"stats-value\"}>\r\n                        <p>{ Object.keys(usersBalances).length !== 0 ?  usersBalances[activeChain][`${chains[activeChain].name}`] : 0}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-100 p-3\" style={{boxShadow: \"var(--light-shadow)\", padding: \"10px\", borderRadius: \"8px\", fontSize: \"30px\", background: (getColor(service.type))}}>\r\n                    <div className=\"time-value\">\r\n                        <h2>{service.type}</h2>\r\n                    </div>\r\n                    <div className={`${(service.state !== \"ACTIVE\" ) ? 'time-value-available' : 'time-value-unavailable'}`}>\r\n                        <h2>{(service.state !== \"ACTIVE\") ? 'Available' : 'Unavailable'}</h2>\r\n                    </div>\r\n                    <ServiceBar/>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex\" style={{padding: \"5px\", columnGap: \"20px\", rowGap: \"20px\"}}>\r\n                <div className=\"w-25 p-3\" style={{boxShadow: \"var(--light-shadow)\", borderRadius: \"8px\", fontSize: \"30px\", padding: \"10px\", backgroundColor: backColor}}>\r\n                    <div className=\"stake-image\">\r\n                        <img src={stakeImg} alt={\"stake\"}/>\r\n                    </div>\r\n                    <div className={\"stake-value\"}>\r\n                        <p>{(Object.keys(usersStakes).length !== 0 ) ?  usersStakes[`${chains[activeChain].name}`] : 0}</p>\r\n                        {/* <p>Hello</p> */}\r\n                    </div>\r\n                    <div className={\"stake-value-proc\"}>\r\n                        <p>({relativeStake.stake}%)</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-100 p-3\" style={{boxShadow: \"var(--light-shadow)\", padding: \"10px\", borderRadius: \"8px\", fontSize: \"30px\", backgroundColor: backColor}}>\r\n                    <div className=\"upgrade-value\" >\r\n                        <h3>Number of upgrades: {user.upgradeNumber}</h3>\r\n                    </div>\r\n                    <div className=\"upgrade-container\">\r\n                        <div className={`${(numOfService1.num > 0) ? 'upgrade-container-green' : 'upgrade-container-red'}`}>\r\n                            <p>{`${numOfService1.num}`} &#215; {`${otherServices.service1}`}</p>\r\n                        </div>\r\n                        <div>\r\n                            <p>+</p>\r\n                        </div>\r\n                        <div className={`${(numOfService2.num > 0) ? 'upgrade-container-green' : 'upgrade-container-red'}`}>\r\n                            <p>{`${numOfService2.num}`} &#215; {`${otherServices.service2}`}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"upgrade-container\">\r\n                        <div className=\"upgrade-container-formula\">\r\n                            <p>{`${otherServices.service1}`} + {`${otherServices.service2}`} = &#8681; {millisToMinutesAndSeconds(user.timeForService - user.nextTimeForService)}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"services-container\">\r\n                <h3>Purchased Services</h3>\r\n                <div className=\"loading-services-container\">\r\n                    {\r\n                        serviceDataArray.map((item) => (\r\n                            <ServiceLoading item={item} key={item.id}/>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Stats"],"names":["context","useContext","AppContext","useState","serviceCompleted","setServiceCompleted","timeLeft","setTimeLeft","millisToMinutesAndSeconds","millis","d","Date","Math","round","getUTCMinutes","getUTCSeconds","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","service","state","timestamp","updatedAt","getTime","newServiceCompleted","floor","now","duration","console","log","className","style","width","data","item","consumer","provider","type","useGlobalContext","gameData","calculateTimeLeft","relativeTime","place","effect","user","game","users","chains","cookies","activeChain","servicesAll","transactions","usersBalances","usersStakes","services","orders","agent","agents","relativeStake","setRelativeStake","serviceDataArray","setServiceDataArray","otherServices","setOtherServices","num","numOfService1","setNumOfService1","numOfService2","setNumOfService2","setUserService","backColor","includes","stake","undefined","name","toFixed","renderServiceData","filter","activeServices","Promise","all","map","_id","providerAgentObject","providerUser","userServices","renderService","JSON","stringify","getOtherServiceTypes","uniqueService","Set","service1","service2","filledOrders","numOfFirst","order","numOfSecond","length","padding","columnGap","rowGap","boxShadow","borderRadius","fontSize","backgroundColor","src","balanceImg","alt","Object","keys","background","getColor","stakeImg","upgradeNumber","timeForService","nextTimeForService"],"sourceRoot":""}