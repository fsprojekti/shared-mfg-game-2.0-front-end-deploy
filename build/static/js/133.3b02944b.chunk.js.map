{"version":3,"file":"static/js/133.3b02944b.chunk.js","mappings":"wQAAaA,EAAiC,SAACC,EAAUC,EAASC,GAC/D,IAAIC,EAASF,EAAQG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAQN,CAAjB,IAKhC,OAFmBE,EAAOE,QAAO,SAAAC,GAAI,OAAIA,EAAKE,KAAOJ,EAAO,GAAGK,aAAeH,EAAKE,KAAOJ,EAAO,GAAGM,WAA/D,IACZC,KAAI,SAAAL,GAAI,OAAIA,EAAKM,IAAT,GAEnC,EAIYC,EAAc,WACxBC,MAAM,QACR,EAGYC,EAAW,mCAAG,WAAOC,EAAQC,EAAQC,GAAvB,oEACxBC,QAAQC,IAAI,cACIC,IAAXL,GAAmC,KAAXA,GAA2B,GAAVA,QAA4BK,IAAXJ,GAAmC,KAAXA,GAA2B,GAAVA,EAFhF,yCAGhB,CAACK,OAAQ,EAAGC,IAAI,2BAHA,YAKhBC,MAAMR,IAAWA,EAAS,GAAOQ,MAAMP,IAAWA,EAAS,GAL3C,yCAMV,CAACK,OAAQ,EAAGC,IAAK,oCANP,YAQdE,EAAcT,GAAU,GAAKS,EAAcR,GAAU,GARvC,0CASJ,CAACK,OAAQ,EAAEC,IAAI,mCATX,aAWRG,SAASV,GAAUU,SAAST,GAAUC,GAX9B,0CAYD,CAACI,OAAQ,EAAGC,IAAI,0CAZf,iCAcD,CAACD,MAAO,EAAGC,IAAI,OAdd,4CAAH,0DAsBlBE,EAAgB,SAACE,GACpB,OAAGC,KAAKC,MAAMF,GAAOG,aAAeH,EAAc,EAC3CA,EAAMG,WAAWC,MAAM,KAAK,GAAGC,QAAU,CAClD,C","sources":["components/misc/HelperFunctions/functions.js"],"sourcesContent":["export const getChainsNamesFromBridgeObject = (bridgeId, bridges, chains) => {\r\n   let bridge = bridges.filter(item => item._id === bridgeId);\r\n\r\n   // console.log(bridge[0]);\r\n   let bridgeChains = chains.filter(item => item.id === bridge[0].chainSource || item.id === bridge[0].chainTarget);\r\n   let names = bridgeChains.map(item => item.name);\r\n   return names;\r\n};\r\n\r\n\r\n    \r\nexport const justAnAlert = () => {\r\n   alert('hello');\r\n};\r\n\r\n\r\nexport const checkNumber = async (input1, input2, balance) => {\r\n   console.log(\"Im in\");\r\n   if ((input1 === undefined || input1 === \"\" || input1 == 0) || (input2 === undefined || input2 === \"\" || input2 == 0)) {\r\n   return ({state: -1, msg:\"You must enter a value\"});\r\n   } else {\r\n      if ((isNaN(input1) || input1 < 0) || (isNaN(input2) || input2 < 0)) {\r\n         return ({state: -1, msg: \"You must enter positive numbers\"});\r\n      } else {\r\n         if (countDecimals(input1) > 0 || countDecimals(input2) > 0)  {\r\n               return ({state: -1,msg:\"Input value must be an integer\"});\r\n         } else {\r\n               if (parseInt(input1) + parseInt(input2) > balance) {\r\n                  return ({state: -1, msg:\"Amount + TxFee is bigger than balance\"});\r\n               } else {\r\n                  return ({state: 1, msg:\"OK\"});\r\n               }\r\n         }\r\n      }\r\n   }\r\n\r\n};\r\n\r\nconst countDecimals = (value) => {\r\n   if(Math.floor(value).toString() === value) return 0;\r\n   return value.toString().split(\".\")[1].length || 0;\r\n};"],"names":["getChainsNamesFromBridgeObject","bridgeId","bridges","chains","bridge","filter","item","_id","id","chainSource","chainTarget","map","name","justAnAlert","alert","checkNumber","input1","input2","balance","console","log","undefined","state","msg","isNaN","countDecimals","parseInt","value","Math","floor","toString","split","length"],"sourceRoot":""}