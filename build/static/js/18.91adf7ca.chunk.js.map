{"version":3,"file":"static/js/18.91adf7ca.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/helpers.js","../node_modules/react-bootstrap/esm/Tooltip.js","../node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/@restart/ui/esm/useRootClose.js","../node_modules/@restart/ui/esm/Overlay.js","../node_modules/react-bootstrap/esm/PopoverHeader.js","../node_modules/react-bootstrap/esm/PopoverBody.js","../node_modules/react-bootstrap/esm/Popover.js","../node_modules/react-bootstrap/esm/Overlay.js","../node_modules/react-bootstrap/esm/useOverlayOffset.js","../node_modules/react-bootstrap/esm/OverlayTrigger.js","components/misc/AttackPanel/AttacksTable.js","components/misc/AttackPanel/CancelVoteModal.js","components/misc/AttackPanel/AttackCard.js","components/misc/HelperFunctions/functions.js"],"sourcesContent":["import * as React from 'react';\nexport class BsPrefixComponent extends React.Component {} // Need to use this instead of typeof Component to get proper type checking.\n\nexport function getOverlayDirection(placement, isRTL) {\n  let bsDirection = placement;\n\n  if (placement === 'left') {\n    bsDirection = isRTL ? 'end' : 'start';\n  } else if (placement === 'right') {\n    bsDirection = isRTL ? 'start' : 'end';\n  }\n\n  return bsDirection;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  arrowProps,\n  popper: _,\n  show: _2,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useEffect } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useClickOutside, { getRefTarget } from './useClickOutside';\nconst escapeKeyCode = 27;\n\nconst noop = () => {};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, {\n  disabled,\n  clickTrigger\n} = {}) {\n  const onClose = onRootClose || noop;\n  useClickOutside(ref, onClose, {\n    disabled,\n    clickTrigger\n  });\n  const handleKeyUp = useEventCallback(e => {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref)); // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = (doc.defaultView || window).event;\n    const removeKeyupListener = listen(doc, 'keyup', e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    return () => {\n      removeKeyupListener();\n    };\n  }, [ref, disabled, handleKeyUp]);\n}\n\nexport default useRootClose;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  const handleHidden = (...args) => {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  const mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n\n  if (Transition) {\n    const {\n      onExit,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = props;\n    child = /*#__PURE__*/_jsx(Transition, {\n      in: props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: child\n    });\n  }\n\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-header');","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport PopoverHeader from './PopoverHeader';\nimport PopoverBody from './PopoverBody';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Popover = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  body,\n  arrowProps,\n  popper: _,\n  show: _1,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    role: \"tooltip\",\n    style: style,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && `bs-popover-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"popover-arrow\",\n      ...arrowProps\n    }), body ? /*#__PURE__*/_jsx(PopoverBody, {\n      children: children\n    }) : children]\n  });\n});\nPopover.defaultProps = defaultProps;\nexport default Object.assign(Popover, {\n  Header: PopoverHeader,\n  Body: PopoverBody,\n  // Default popover offset.\n  // https://github.com/twbs/bootstrap/blob/5c32767e0e0dbac2d934bcdee03719a65d3f1187/js/src/popover.js#L28\n  POPPER_OFFSET: [0, 8]\n});","import * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from '@restart/ui/Overlay';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nconst Overlay = /*#__PURE__*/React.forwardRef(({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}, outerRef) => {\n  const popperRef = useRef({});\n  const [ref, modifiers] = useOverlayOffset(outerProps.offset);\n  const mergedRef = useMergedRefs(outerRef, ref);\n  const actualTransition = transition === true ? Fade : transition || undefined;\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: mergedRef,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    },\n    transition: actualTransition,\n    children: (overlayProps, {\n      arrowProps,\n      popper: popperObj,\n      show\n    }) => {\n      var _popperObj$state, _popperObj$state$modi;\n\n      wrapRefs(overlayProps, arrowProps); // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\n\n      const updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\n      const popper = Object.assign(popperRef.current, {\n        state: popperObj == null ? void 0 : popperObj.state,\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\n        placement: updatedPlacement,\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay({ ...overlayProps,\n        placement: updatedPlacement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...overlayProps,\n        placement: updatedPlacement,\n        arrowProps,\n        popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover'; // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\nexport default function useOverlayOffset(customOffset) {\n  const overlayRef = useRef(null);\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\n  const offset = useMemo(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\n          return customOffset || Popover.POPPER_OFFSET;\n        }\n\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}","import contains from 'dom-helpers/contains';\nimport * as React from 'react';\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport warning from 'warning';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Overlay from './Overlay';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction normalizeDelay(delay) {\n  return delay && typeof delay === 'object' ? delay : {\n    show: delay,\n    hide: delay\n  };\n} // Simple implementation of mouseEnter and mouseLeave.\n// React's built version is broken: https://github.com/facebook/react/issues/4251\n// for cases when the trigger is disabled and mouseOut/Over can cause flicker\n// moving from one child element to another.\n\n\nfunction handleMouseOverOut( // eslint-disable-next-line @typescript-eslint/no-shadow\nhandler, args, relatedNative) {\n  const [e] = args;\n  const target = e.currentTarget;\n  const related = e.relatedTarget || e.nativeEvent[relatedNative];\n\n  if ((!related || related !== target) && !contains(target, related)) {\n    handler(...args);\n  }\n}\n\nconst defaultProps = {\n  defaultShow: false,\n  trigger: ['hover', 'focus']\n};\n\nfunction OverlayTrigger({\n  trigger,\n  overlay,\n  children,\n  popperConfig = {},\n  show: propsShow,\n  defaultShow = false,\n  onToggle,\n  delay: propsDelay,\n  placement,\n  flip = placement && placement.indexOf('auto') !== -1,\n  ...props\n}) {\n  const triggerNodeRef = useRef(null);\n  const mergedRef = useMergedRefs(triggerNodeRef, children.ref);\n  const timeout = useTimeout();\n  const hoverStateRef = useRef('');\n  const [show, setShow] = useUncontrolledProp(propsShow, defaultShow, onToggle);\n  const delay = normalizeDelay(propsDelay);\n  const {\n    onFocus,\n    onBlur,\n    onClick\n  } = typeof children !== 'function' ? React.Children.only(children).props : {};\n\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n\n  const handleShow = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'show';\n\n    if (!delay.show) {\n      setShow(true);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'show') setShow(true);\n    }, delay.show);\n  }, [delay.show, setShow, timeout]);\n  const handleHide = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'hide';\n\n    if (!delay.hide) {\n      setShow(false);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'hide') setShow(false);\n    }, delay.hide);\n  }, [delay.hide, setShow, timeout]);\n  const handleFocus = useCallback((...args) => {\n    handleShow();\n    onFocus == null ? void 0 : onFocus(...args);\n  }, [handleShow, onFocus]);\n  const handleBlur = useCallback((...args) => {\n    handleHide();\n    onBlur == null ? void 0 : onBlur(...args);\n  }, [handleHide, onBlur]);\n  const handleClick = useCallback((...args) => {\n    setShow(!show);\n    onClick == null ? void 0 : onClick(...args);\n  }, [onClick, setShow, show]);\n  const handleMouseOver = useCallback((...args) => {\n    handleMouseOverOut(handleShow, args, 'fromElement');\n  }, [handleShow]);\n  const handleMouseOut = useCallback((...args) => {\n    handleMouseOverOut(handleHide, args, 'toElement');\n  }, [handleHide]);\n  const triggers = trigger == null ? [] : [].concat(trigger);\n  const triggerProps = {\n    ref: attachRef\n  };\n\n  if (triggers.indexOf('click') !== -1) {\n    triggerProps.onClick = handleClick;\n  }\n\n  if (triggers.indexOf('focus') !== -1) {\n    triggerProps.onFocus = handleFocus;\n    triggerProps.onBlur = handleBlur;\n  }\n\n  if (triggers.indexOf('hover') !== -1) {\n    process.env.NODE_ENV !== \"production\" ? warning(triggers.length > 1, '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the visibility of the overlay to just mouse users. Consider also including the `\"focus\"` trigger so that touch and keyboard only users can see the overlay as well.') : void 0;\n    triggerProps.onMouseOver = handleMouseOver;\n    triggerProps.onMouseOut = handleMouseOut;\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [typeof children === 'function' ? children(triggerProps) : /*#__PURE__*/cloneElement(children, triggerProps), /*#__PURE__*/_jsx(Overlay, { ...props,\n      show: show,\n      onHide: handleHide,\n      flip: flip,\n      placement: placement,\n      popperConfig: popperConfig,\n      target: triggerNodeRef.current,\n      children: overlay\n    })]\n  });\n}\n\nOverlayTrigger.defaultProps = defaultProps;\nexport default OverlayTrigger;","import React, {useState, useEffect, useContext} from 'react';\r\nimport {Card, OverlayTrigger } from \"react-bootstrap\";\r\nimport { AppContext } from '../../../context/context';\r\nimport { getChainsNamesFromBridgeObject } from '../HelperFunctions/functions';\r\n\r\nconst AttacksTable = () => {\r\n    const context = useContext(AppContext);\r\n\r\n\r\n    const openCancelVoteModal = async (item) => {\r\n        console.log(\"clicked\");\r\n        context.setIsCancelVoteModalOpen(true);\r\n        context.setCancelVoteModalContent(item);\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(context.stealVotes);\r\n    }, [context.stealVotes]);\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"d-flex flex-column\" style={{padding: \"5px\"}}>\r\n            <div className=\"d-flex align-items-start\">\r\n                 <Card className='attack-card-1' style={{width: \"60%\", margin: \"5px\", justifyContent: \"space-evenly\", borderRadius: \"8px\", boxShadow: \"var(--light-shadow)\", paddingRight: \"5px\"}}>\r\n                    {/* <Card.Title>Bridges</Card.Title> */}\r\n                    <Card.Body>\r\n                        <Card className='d-flex flex-column' style={{    borderRadius: \"8px\", margin: \"10px\", padding: \"10px\"}}>\r\n                            <table className=\"table-all-transactions\" style={{borderCollapse: \"collapse\", background: \"auto\", float: \"left\", cursor: \"pointer\"}}>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th> Bridge </th>\r\n                                   <th> Status </th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    context.stealVotes.map((item, index) => (\r\n                                    <tr\r\n                                        key={item._id} \r\n                                        onClick={(index) => (openCancelVoteModal(item))} \r\n                                    >\r\n                                        <td>{getChainsNamesFromBridgeObject(item.bridges[0], context.bridges, context.chains)[0]} - {getChainsNamesFromBridgeObject(item.bridges[0], context.bridges, context.chains)[1]} </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                                </tbody>\r\n                            </table>      \r\n                        </Card>\r\n\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n\r\n            <Card className='attack-card-1' style={{width: \"60%\", margin: \"5px\", justifyContent: \"space-evenly\", borderRadius: \"8px\", boxShadow: \"var(--light-shadow)\", paddingRight: \"5px\"}}>\r\n                    {/* <Card.Title>Players</Card.Title> */}\r\n                    <Card.Body>\r\n                    <Card className='d-flex flex-column' style={{    borderRadius: \"8px\", margin: \"10px\", padding: \"10px\"}}>\r\n                            <table className=\"table-all-transactions\" style={{borderCollapse: \"collapse\", background: \"auto\", float: \"left\", borderRadius: \"8px\"}}>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th> Player </th>\r\n                                   <th> Status </th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {\r\n                                    context.blockVotes.map((item) =>\r\n                                        (\r\n                                            <tr key={item.bridge}>\r\n                                                <td>{item.votes}</td>\r\n                                                <td>{item.percentage}</td>\r\n                                                <td>{item.status}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    )\r\n                                }\r\n                                </tbody>\r\n                            </table>      \r\n                        </Card>\r\n\r\n\r\n                </Card.Body>\r\n                \r\n            </Card>\r\n                   \r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AttacksTable","import React, {useState, useEffect, useContext} from 'react';\r\nimport { AppContext } from '../../../context/context';\r\nimport {motion} from 'framer-motion'\r\nimport { getChainsNamesFromBridgeObject } from '../HelperFunctions/functions';\r\nimport {Button, Spinner} from \"react-bootstrap\";\r\n\r\nconst CancelVoteModal = () => {\r\n    const context = useContext(AppContext);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return (\r\n\r\n        <div>\r\n            {context.isCancelVoteModalOpen ? (\r\n            <div>\r\n\r\n                <div className={`${'modal-confirm-overlay show-modal-confirm'}`} >\r\n                    <motion.div \r\n                        className=\"box\"\r\n                            initial={{ opacity: 0, scale: 0.5 }}\r\n                            animate={{ opacity: 1, scale: 1 }}\r\n                            transition={{\r\n                                duration: 0.2,\r\n                                type: \"spring\",\r\n                                bounce: 0.5,\r\n                                ease: [0, 0.71, 0.2, 1.01]\r\n                            }}\r\n                    >\r\n                        <div className='modal-confirm-container'>\r\n                            <h3>Retract Steal Vote For </h3>\r\n                            <ul sty>\r\n                                <li>{getChainsNamesFromBridgeObject(context.cancelVoteModalContent.bridges[0], context.bridges, context.chains)[0]} </li>\r\n                                <li>🔃</li>\r\n                                <li>{getChainsNamesFromBridgeObject(context.cancelVoteModalContent.bridges[0], context.bridges, context.chains)[1]}</li>\r\n                            </ul>\r\n                             <b>Are you sure you want to continue?</b>\r\n                            <div className=\"d-flex justify-content-center\" style={{marginBottom: \"10px\"}}>\r\n                                    <Button variant=\"success\" onClick={console.log(\"confirm\")}  style={{margin: \"5px\"}} >\r\n                                    \r\n                                    {loading ? (\r\n                                        <div>\r\n                                            <Spinner\r\n                                            as=\"span\"\r\n                                            animation=\"grow\"\r\n                                            size=\"sm\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                        />\r\n                                        <text> Retracting </text>\r\n                                        </div>\r\n                                    ) : ( <text> Continue  </text>)\r\n                                    \r\n                                    }   \r\n                                    </Button>\r\n\r\n                                    <Button variant=\"danger\"  onClick={() =>  context.setIsCancelVoteModalOpen(false)} style={{margin: \"5px\"}}>\r\n                                        <text> Cancel  </text>\r\n                                    </Button>\r\n                                </div>\r\n\r\n                        </div>\r\n                    </motion.div>\r\n                </div>\r\n            </div>\r\n            ): (\r\n                <div></div>\r\n            )}\r\n            {context.isCancelBlockModalOpen ? (\r\n            <div>\r\n\r\n                <div className={`${'modal-confirm-overlay show-modal-confirm'}`} >\r\n                    <motion.div \r\n                        className=\"box\"\r\n                            initial={{ opacity: 0, scale: 0.5 }}\r\n                            animate={{ opacity: 1, scale: 1 }}\r\n                            transition={{\r\n                                duration: 0.2,\r\n                                type: \"spring\",\r\n                                bounce: 0.5,\r\n                                ease: [0, 0.71, 0.2, 1.01]\r\n                            }}\r\n                    >\r\n                        <div className='modal-confirm-container'>\r\n                            <h3>Retract Block Vote For </h3>\r\n                            <ul sty>\r\n                                <li> Player name </li>\r\n                            </ul>\r\n                             <b>Are you sure you want to continue?</b>\r\n                            <div className=\"d-flex justify-content-center\" style={{marginBottom: \"10px\"}}>\r\n                                    <Button variant=\"success\" onClick={console.log(\"confirm\")}  style={{margin: \"5px\"}} >\r\n                                    \r\n                                    {loading ? (\r\n                                        <div>\r\n                                            <Spinner\r\n                                            as=\"span\"\r\n                                            animation=\"grow\"\r\n                                            size=\"sm\"\r\n                                            role=\"status\"\r\n                                            aria-hidden=\"true\"\r\n                                        />\r\n                                        <text> Retracting </text>\r\n                                        </div>\r\n                                    ) : ( <text> Continue  </text>)\r\n                                    \r\n                                    }   \r\n                                    </Button>\r\n\r\n                                    <Button variant=\"danger\"  onClick={() =>  context.setIsCancelVoteModalOpen(false)} style={{margin: \"5px\"}}>\r\n                                        <text> Cancel  </text>\r\n                                    </Button>\r\n                                </div>\r\n\r\n                        </div>\r\n                    </motion.div>\r\n                </div>\r\n            </div>\r\n            ): (\r\n                <div></div>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default CancelVoteModal;","import React, {useState, useEffect, useContext} from 'react';\r\nimport {Button, Card, Spinner, OverlayTrigger, Tooltip, Row, Container, Col, Dropdown } from \"react-bootstrap\";\r\nimport { AppContext } from '../../../context/context';\r\nimport AttacksTable from './AttacksTable';\r\nimport CancelVoteModal from './CancelVoteModal';\r\n\r\n\r\nconst AttackCard = () => {\r\n    const context = useContext(AppContext);\r\n\r\n    let [bridge, setbridgeNo] = useState(0);\r\n    let [user, setUser] = useState(0);\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(\"\");\r\n\r\n    function attackbridge(number){\r\n        setbridgeNo(number);\r\n        console.log(bridge);\r\n    }\r\n\r\n    function attackUser(number){\r\n        setUser(number);\r\n        console.log(user);\r\n    }\r\n\r\n    const getChainsNamesFromBridgeObject = (index) => {\r\n        let chainsArr = context.chains;\r\n        // console.log(context.bridges[index])\r\n        let bridgeChains = chainsArr.filter(item => item.id === context.bridges[index].chainSource || item.id === context.bridges[index].chainTarget);\r\n        let names = bridgeChains.map(item => item.name);\r\n        return names;\r\n    };\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          You can remove your vote by clicking on the bridge/player in the table.\r\n        </Tooltip>\r\n      );\r\n    \r\n\r\n    useEffect(() => {\r\n        const renderUserTable = async () => {\r\n            const usersWithoutMainPlayer = await context.users['users'].filter(user => user._id !== context.user.id);\r\n            setUsers(usersWithoutMainPlayer);\r\n        };\r\n        renderUserTable();\r\n        console.log(users)\r\n    }, [])\r\n\r\n\r\n    let voteStealBridge = async () => {\r\n        try {\r\n            \r\n            setLoading(\"steal\");\r\n\r\n            console.log(context.bridges[0])\r\n            await context.apiUserStealVoteON(context.bridges[bridge]._id);\r\n\r\n            context.setNote({\r\n                show: true,\r\n                type: \"success\",\r\n                msg: \"Attack vote casted\",\r\n                heading: \"Success! \"\r\n            })\r\n            setLoading(false);\r\n        } catch (e) {\r\n            setLoading(false);\r\n            context.setNote({\r\n                show: true,\r\n                type: \"danger\",\r\n                msg: e.response.data.message,\r\n                heading: \"Could not vote! \"\r\n            })\r\n        }\r\n    }\r\n\r\n    let removeVoteStealBridge = async () => {\r\n        try {\r\n            setLoading(true);\r\n            await context.apiUserStealVoteOFF(context.bridges[bridge].id);\r\n\r\n            context.setNote({\r\n                show: true,\r\n                type: \"success\",\r\n                msg: \"Attack vote removed\",\r\n                heading: \"Success!\"\r\n            })\r\n            setLoading(\"\");\r\n        } catch (e) {\r\n            setLoading(\"\");\r\n            context.setNote({\r\n                show: true,\r\n                type: \"danger\",\r\n                msg: e.response.data.message,\r\n                heading: \"Chain not created! \"\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        {/* <div className=\"d-flex\" style={{padding: \"5px\", columnGap: \"20px\", rowGap: \"20px\"}}> */}\r\n                <div className=\"d-flex align-items-start\">\r\n                <Container>\r\n                <Row >\r\n                <Col>\r\n                {context.bridges.length > 0 ? (\r\n                    <Card className='attack-card-1' style={{width: \"100%\", margin: \"5px\", justifyContent: \"space-evenly\", borderRadius: \"8px\", boxShadow: \"var(--light-shadow)\", minHeight: \"30vh\" }}>\r\n                            <Card.Body>\r\n                            \r\n                            <Card className='d-flex flex-column' style={{backgroundColor: \"rgba(222, 243, 239, 0.5)\", borderColor: \"red\", borderRadius: \"8px\", margin: \"10px\", padding: \"10px\"}}>\r\n                            <Card.Body>\r\n                            \r\n                                <Card.Title style={{padding: \"10px\"}}> Vote To Steal From a Bridge </Card.Title>\r\n                                <Card.Text>\r\n                                <b> Select the bridge you wish to steal from </b> \r\n                                </Card.Text>\r\n                                \r\n                                <Card.Text>\r\n\r\n                                <Dropdown  className='d-flex' style={{justifyContent: \"center\", width: \"auto\", wordBreak: \"break-all\"}}>\r\n                            \r\n                                <Dropdown.Toggle className='d-flex'  variant=\"outline-secondary\" id=\"dropdown-basic\" >\r\n                                 <b> {getChainsNamesFromBridgeObject(bridge)[0]} 🌉 {getChainsNamesFromBridgeObject(bridge)[1]} </b> \r\n                                </Dropdown.Toggle>\r\n                                \r\n                                <Dropdown.Menu>\r\n\r\n                                {\r\n                                    context.bridges.map((item, index) => (\r\n                                        \r\n                                        <Dropdown.Item onClick={(item) => (attackbridge(index))} > {getChainsNamesFromBridgeObject(index)[0]} - {getChainsNamesFromBridgeObject(index)[1]} </Dropdown.Item>\r\n\r\n                                    ))\r\n                                }\r\n                                </Dropdown.Menu>\r\n                                \r\n                                </Dropdown>\r\n                                \r\n                                \r\n                                </Card.Text>\r\n                                \r\n                            </Card.Body>\r\n                        \r\n                        </Card>\r\n\r\n                        <Button variant=\"danger\" style={{borderRadius: \"8px\"}} onClick={voteStealBridge}> \r\n                            {loading === \"steal\" ? (\r\n                                <div>\r\n                                    <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"grow\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                                <text> Adding vote </text>\r\n                                </div>\r\n                            ) : ( <text> Vote to Steal  </text>)\r\n                            \r\n                            }   \r\n                            \r\n                        </Button>\r\n                        </Card.Body>\r\n                        \r\n                    </Card>            \r\n\r\n\r\n                ): (\r\n                    <Card className='attack-card-1' style={{width: \"100%\", margin: \"5px\", justifyContent: \"space-evenly\", borderRadius: \"8px\", boxShadow: \"var(--light-shadow)\", minHeight: \"30vh\" }}>\r\n                            <Card.Body>\r\n                            \r\n                            <Card className='d-flex flex-column' style={{backgroundColor: \"rgba(222, 243, 239, 0.5)\", borderColor: \"red\", borderRadius: \"8px\", margin: \"10px\", padding: \"10px\"}}>\r\n                            <Card.Body>\r\n                            \r\n                                <Card.Title style={{padding: \"10px\"}}> Vote To Steal From a Bridge </Card.Title>\r\n                                <Card.Text>\r\n                                <b> Create a bridge (chain) first to use this function </b> \r\n                                </Card.Text>\r\n                                \r\n                                <Card.Text>\r\n\r\n                                \r\n                                \r\n                                </Card.Text>\r\n                                \r\n                            </Card.Body>\r\n                        \r\n                        </Card>\r\n\r\n                        </Card.Body>\r\n                        \r\n                    </Card>            \r\n                )\r\n                }\r\n                       \r\n                    </Col>\r\n                    <Col>\r\n                    <Card className='attack-card-1' style={{width: \"100%\", margin: \"5px\", justifyContent: \"space-evenly\", borderRadius: \"8px\", boxShadow: \"var(--light-shadow)\", minHeight: \"30vh\" }}>\r\n                            <Card.Body>\r\n                            <Card className='d-flex flex-column' style={{backgroundColor: \"rgba(222, 243, 239, 0.5)\", borderColor: \"red\", borderRadius: \"8px\", margin: \"10px\", padding: \"10px\"}}>\r\n                            <Card.Body>\r\n                            \r\n                                <Card.Title style={{padding: \"10px\"}}> Vote To Block a Player </Card.Title>\r\n                                <Card.Text>\r\n                                <b> Select the player you wish to block </b> \r\n                                </Card.Text>\r\n                                \r\n                                <Card.Text>\r\n\r\n                                <Dropdown  className='d-flex' style={{justifyContent: \"center\"}}>\r\n                            \r\n                                <Dropdown.Toggle className='d-flex' style={{justifyContent: \"center\"}} variant=\"outline-secondary\" id=\"dropdown-basic\" >\r\n                                    <b> {users.length > 0 ? users[user].name : \"player\"} </b> \r\n                                </Dropdown.Toggle>\r\n                                \r\n                                <Dropdown.Menu>\r\n\r\n                                {\r\n                                    users.map((item, index) => (\r\n                                        \r\n                                        <Dropdown.Item  onClick={() => (attackUser(index))} > {item.name} </Dropdown.Item>\r\n\r\n                                    ))\r\n                                }\r\n                                </Dropdown.Menu>\r\n                                \r\n                                </Dropdown>\r\n                                \r\n                                \r\n                                </Card.Text>\r\n                                \r\n                            </Card.Body>\r\n                        \r\n                        </Card>\r\n\r\n                        <Button variant=\"danger\" style={{borderRadius: \"8px\"}} onClick={voteStealBridge}> \r\n                            {loading === \"block\" ? (\r\n                                <div>\r\n                                    <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"grow\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                                <text> Adding vote </text>\r\n                                </div>\r\n                            ) : ( <text> Vote to Block  </text>)\r\n                            \r\n                            }   \r\n                            \r\n                        </Button>\r\n                        </Card.Body>\r\n                        \r\n                    </Card>\r\n                    </Col>\r\n            </Row>\r\n            </Container>\r\n                </div>  \r\n                    <div className='' style={{backgroundColor: \"rgba(255, 255, 255, 0.8)\", boxShadow: \"var(--light-shadow)\", borderRadius: \"8px\", margin: \"5px\", textAlign: \"center\"}}>\r\n                        <div className='d-flex'>\r\n                            <OverlayTrigger\r\n                                placement=\"top\"\r\n                                delay={{ show: 0, hide: 400 }}\r\n                                overlay={renderTooltip}\r\n                                >\r\n                                <Button variant=\"info\" size=\"sm\" className='d-flex justify-content-start' style={{margin: \"5px\", position: \"absolute\", fontWeight: \"bold\"}}>i</Button>\r\n                                </OverlayTrigger>\r\n                            <h3 style={{textAlign: \"center\", width:\"100%\"}} >Attack status</h3> \r\n                        </div>    \r\n                            <AttacksTable />\r\n                            {context.stealVotes.length > 0 ? (<CancelVoteModal />): (null)}\r\n                    </div>\r\n\r\n            {/* </div> */}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AttackCard","export const getChainsNamesFromBridgeObject = (bridgeId, bridges, chains) => {\r\n   let bridge = bridges.filter(item => item._id === bridgeId);\r\n\r\n   // console.log(bridge[0]);\r\n   let bridgeChains = chains.filter(item => item.id === bridge[0].chainSource || item.id === bridge[0].chainTarget);\r\n   let names = bridgeChains.map(item => item.name);\r\n   return names;\r\n};\r\n\r\n\r\n    \r\nexport const justAnAlert = () => {\r\n   alert('hello');\r\n};\r\n\r\n\r\nexport const checkNumber = async (input1, input2, balance) => {\r\n   console.log(\"Im in\");\r\n   if ((input1 === undefined || input1 === \"\" || input1 == 0) || (input2 === undefined || input2 === \"\" || input2 == 0)) {\r\n   return ({state: -1, msg:\"You must enter a value\"});\r\n   } else {\r\n      if ((isNaN(input1) || input1 < 0) || (isNaN(input2) || input2 < 0)) {\r\n         return ({state: -1, msg: \"You must enter positive numbers\"});\r\n      } else {\r\n         if (countDecimals(input1) > 0 || countDecimals(input2) > 0)  {\r\n               return ({state: -1,msg:\"Input value must be an integer\"});\r\n         } else {\r\n               if (parseInt(input1) + parseInt(input2) > balance) {\r\n                  return ({state: -1, msg:\"Amount + TxFee is bigger than balance\"});\r\n               } else {\r\n                  return ({state: 1, msg:\"OK\"});\r\n               }\r\n         }\r\n      }\r\n   }\r\n\r\n};\r\n\r\nconst countDecimals = (value) => {\r\n   if(Math.floor(value).toString() === value) return 0;\r\n   return value.toString().split(\".\")[1].length || 0;\r\n};"],"names":["React","getOverlayDirection","placement","isRTL","bsDirection","Tooltip","ref","bsPrefix","className","style","children","arrowProps","props","popper","show","useBootstrapPrefix","useIsRTL","split","primaryPlacement","_jsxs","role","classNames","_jsx","defaultProps","displayName","MAX_DELAY_MS","Math","pow","setChainedTimeout","handleRef","fn","timeoutAtMs","delayMs","Date","now","current","setTimeout","useTimeout","isMounted","useMounted","useRef","useWillUnmount","clearTimeout","useMemo","clear","set","noop","onRootClose","disabled","clickTrigger","onClose","useClickOutside","handleKeyUp","useEventCallback","e","keyCode","useEffect","doc","ownerDocument","getRefTarget","currentEvent","defaultView","window","event","removeKeyupListener","listen","undefined","Overlay","outerRef","flip","offset","containerPadding","popperConfig","Transition","transition","useCallbackRef","rootElement","attachRef","arrowElement","attachArrowRef","mergedRef","useMergedRefs","container","useWaitForDOMRef","target","useState","exited","setExited","usePopper","mergeOptionsWithPopperConfig","enableEvents","mountOverlay","useRootClose","onHide","rootClose","rootCloseDisabled","rootCloseEvent","child","Object","assign","attributes","styles","arrow","onExit","onExiting","onEnter","onEntering","onEntered","in","appear","onExited","ReactDOM","createWithBsPrefix","Popover","body","decoratedBsPrefix","PopoverBody","Header","PopoverHeader","Body","POPPER_OFFSET","Fade","overlay","outerProps","popperRef","customOffset","overlayRef","popoverClass","name","options","hasClass","useOverlayOffset","modifiers","actualTransition","BaseOverlay","concat","overlayProps","_popperObj$state","_popperObj$state$modi","popperObj","aRef","__wrapped","r","safeFindDOMNode","wrapRefs","updatedPlacement","state","scheduleUpdate","update","outOfBoundaries","modifiersData","hide","isReferenceHidden","handleMouseOverOut","handler","args","relatedNative","currentTarget","related","relatedTarget","nativeEvent","contains","OverlayTrigger","trigger","propsShow","defaultShow","onToggle","propsDelay","delay","indexOf","triggerNodeRef","timeout","hoverStateRef","useUncontrolledProp","setShow","normalizeDelay","onFocus","onBlur","onClick","handleShow","useCallback","handleHide","handleFocus","handleBlur","handleClick","handleMouseOver","handleMouseOut","triggers","triggerProps","onMouseOver","onMouseOut","_Fragment","cloneElement","context","useContext","AppContext","openCancelVoteModal","item","console","log","setIsCancelVoteModalOpen","setCancelVoteModalContent","stealVotes","padding","Card","width","margin","justifyContent","borderRadius","boxShadow","paddingRight","borderCollapse","background","float","cursor","map","index","getChainsNamesFromBridgeObject","bridges","chains","_id","blockVotes","votes","percentage","status","bridge","loading","isCancelVoteModalOpen","motion","initial","opacity","scale","animate","duration","type","bounce","ease","sty","cancelVoteModalContent","marginBottom","Button","variant","Spinner","as","animation","size","isCancelBlockModalOpen","setbridgeNo","user","setUser","users","setUsers","setLoading","filter","id","chainSource","chainTarget","renderUserTable","usersWithoutMainPlayer","voteStealBridge","apiUserStealVoteON","setNote","msg","heading","response","data","message","Container","Row","Col","length","minHeight","backgroundColor","borderColor","Dropdown","wordBreak","textAlign","position","fontWeight","bridgeId","justAnAlert","alert","checkNumber","input1","input2","balance","isNaN","countDecimals","parseInt","value","floor","toString"],"sourceRoot":""}